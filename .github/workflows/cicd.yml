name: Deploy Go Application

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest  # EC2 runner for build
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Create .env file
        run: echo "PORT=${{ secrets.PORT }}" >> .env

      - name: Login to JFrog Artifactory
        run: echo "${{ secrets.JFROG_ACCESS_TOKEN }}" | docker login trial4ghvrq.jfrog.io -u naveena_edara@persistent.com --password-stdin

      - name: Build Docker Image
        run: docker build -t trial4ghvrq.jfrog.io/demo-go-local/go-app:latest .

      - name: Push Docker Image to JFrog
        run: docker push trial4ghvrq.jfrog.io/demo-go-local/go-app:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest  # EC2 runner for deployment
    steps:
      - name: Login to JFrog Artifactory
        run: echo "${{ secrets.JFROG_ACCESS_TOKEN }}" | docker login trial4ghvrq.jfrog.io -u naveena_edara@persistent.com --password-stdin

      - name: Pull Docker Image
        run: docker pull trial4ghvrq.jfrog.io/demo-go-local/go-app:latest

      - name: Stop Existing Container (if running)
        run: docker rm -f go-app-container || true

      - name: Run New Container
        run: docker run -d -p 4040:4040 -e PORT=${{ secrets.PORT }} --name go-app-container trial4ghvrq.jfrog.io/docker-local/go-app:latest
